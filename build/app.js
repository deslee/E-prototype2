(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var React = require('react'),
  mui = require('material-ui'),
  Toolbar = mui.Toolbar,
  DropDownMenu = mui.DropDownMenu,
  DropDownIcon = mui.DropDownIcon,
  ToolbarGroup = mui.ToolbarGroup,
  RaisedButton = mui.RaisedButton,
  IconButton = mui.IconButton,
  FlatButton = mui.FlatButton,
  DatePicker = mui.DatePicker,
  TextField = mui.TextField,
  MenuItem = mui.MenuItem,
  LeftNav = mui.LeftNav,
  Dialog = mui.Dialog,
  Snackbar = mui.Snackbar,
  Paper = mui.Paper,
  AppBar = mui.AppBar,
  AppCanvas = mui.AppCanvas,
  Icon = mui.Icon;

var injectTapEventPlugin = require("react-tap-event-plugin");

//Needed for onTouchTap
//Can go away when react 1.0 release
//Check this repo:
//https://github.com/zilverline/react-tap-event-plugin
injectTapEventPlugin();


var filterOptions = [
  { payload: '1', text: 'All Broadcasts' },
  { payload: '2', text: 'All Voice' },
  { payload: '3', text: 'All Text' },
  { payload: '4', text: 'Complete Voice' },
  { payload: '5', text: 'Complete Text' },
  { payload: '6', text: 'Active Voice' },
  { payload: '7', text: 'Active Text' },
];
var iconMenuItems = [
  { payload: '1', text: 'Download' },
  { payload: '2', text: 'More Info' }
];


React.render(React.createElement("div", {className: "frame"}, 

  React.createElement(Paper, {zDepth: 1, className: "navbar", innerClassName: "navbar-container"}, 
    React.createElement(IconButton, {icon: "navigation-menu", tooltip: "Navigation", className: "nav-icon"}), 
    React.createElement("h1", {className: "title"}, "E-Prototype2"), 
    React.createElement("div", {className: "right-menu"}, 
      React.createElement(FlatButton, {label: "Settings"}), 
      React.createElement(FlatButton, {label: "Log out"})
    )
  ), 

  React.createElement("div", {className: "columns"}, 
    React.createElement("div", {className: "entry-list"}, "list"), 
    React.createElement("div", {className: "entry-edit active"}, "edit"), 
    React.createElement("div", {className: "entry-display active"}, "display")
  )

), document.getElementById("des-react-app"));


},{"material-ui":"cq8vXV","react":"himR+j","react-tap-event-plugin":"jhNGSC"}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZGVzbW9uZFxcV2Vic3Rvcm1Qcm9qZWN0c1xcZWxpLXByb3RvMlxcbm9kZV9tb2R1bGVzXFxndWxwLWJyb3dzZXJpZnlcXG5vZGVfbW9kdWxlc1xcYnJvd3NlcmlmeVxcbm9kZV9tb2R1bGVzXFxicm93c2VyLXBhY2tcXF9wcmVsdWRlLmpzIiwiQzpcXFVzZXJzXFxkZXNtb25kXFxXZWJzdG9ybVByb2plY3RzXFxlbGktcHJvdG8yXFxhcHBcXG1haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQSxJQUFJLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDO0VBQzFCLEdBQUcsR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDO0VBQzVCLE9BQU8sR0FBRyxHQUFHLENBQUMsT0FBTztFQUNyQixZQUFZLEdBQUcsR0FBRyxDQUFDLFlBQVk7RUFDL0IsWUFBWSxHQUFHLEdBQUcsQ0FBQyxZQUFZO0VBQy9CLFlBQVksR0FBRyxHQUFHLENBQUMsWUFBWTtFQUMvQixZQUFZLEdBQUcsR0FBRyxDQUFDLFlBQVk7RUFDL0IsVUFBVSxHQUFHLEdBQUcsQ0FBQyxVQUFVO0VBQzNCLFVBQVUsR0FBRyxHQUFHLENBQUMsVUFBVTtFQUMzQixVQUFVLEdBQUcsR0FBRyxDQUFDLFVBQVU7RUFDM0IsU0FBUyxHQUFHLEdBQUcsQ0FBQyxTQUFTO0VBQ3pCLFFBQVEsR0FBRyxHQUFHLENBQUMsUUFBUTtFQUN2QixPQUFPLEdBQUcsR0FBRyxDQUFDLE9BQU87RUFDckIsTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNO0VBQ25CLFFBQVEsR0FBRyxHQUFHLENBQUMsUUFBUTtFQUN2QixLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUs7RUFDakIsTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNO0VBQ25CLFNBQVMsR0FBRyxHQUFHLENBQUMsU0FBUztBQUMzQixFQUFFLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDOztBQUVsQixJQUFJLG9CQUFvQixHQUFHLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDOztBQUU3RCx1QkFBdUI7QUFDdkIsb0NBQW9DO0FBQ3BDLGtCQUFrQjtBQUNsQixzREFBc0Q7QUFDdEQsb0JBQW9CLEVBQUUsQ0FBQztBQUN2Qjs7QUFFQSxJQUFJLGFBQWEsR0FBRztFQUNsQixFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFO0VBQ3hDLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFO0VBQ25DLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFO0VBQ2xDLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUU7RUFDeEMsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUU7RUFDdkMsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUU7RUFDdEMsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxhQUFhLEVBQUU7Q0FDdEMsQ0FBQztBQUNGLElBQUksYUFBYSxHQUFHO0VBQ2xCLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFO0VBQ2xDLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFO0FBQ3JDLENBQUMsQ0FBQztBQUNGOztBQUVBLEtBQUssQ0FBQyxNQUFNLENBQUMsb0JBQUEsS0FBSSxFQUFBLENBQUEsQ0FBQyxTQUFBLEVBQVMsQ0FBQyxPQUFRLENBQUEsRUFBQTs7RUFFbEMsb0JBQUMsS0FBSyxFQUFBLENBQUEsQ0FBQyxNQUFBLEVBQU0sQ0FBRSxDQUFDLEVBQUMsQ0FBQyxTQUFBLEVBQVMsQ0FBQyxRQUFBLEVBQVEsQ0FBQyxjQUFBLEVBQWMsQ0FBQyxrQkFBbUIsQ0FBQSxFQUFBO0lBQ3JFLG9CQUFDLFVBQVUsRUFBQSxDQUFBLENBQUMsSUFBQSxFQUFJLENBQUMsaUJBQUEsRUFBaUIsQ0FBQyxPQUFBLEVBQU8sQ0FBQyxZQUFBLEVBQVksQ0FBQyxTQUFBLEVBQVMsQ0FBQyxVQUFVLENBQUEsQ0FBRyxDQUFBLEVBQUE7SUFDL0Usb0JBQUEsSUFBRyxFQUFBLENBQUEsQ0FBQyxTQUFBLEVBQVMsQ0FBQyxPQUFRLENBQUEsRUFBQSxjQUFpQixDQUFBLEVBQUE7SUFDdkMsb0JBQUEsS0FBSSxFQUFBLENBQUEsQ0FBQyxTQUFBLEVBQVMsQ0FBQyxZQUFhLENBQUEsRUFBQTtNQUMxQixvQkFBQyxVQUFVLEVBQUEsQ0FBQSxDQUFDLEtBQUEsRUFBSyxDQUFDLFVBQVUsQ0FBQSxDQUFHLENBQUEsRUFBQTtNQUMvQixvQkFBQyxVQUFVLEVBQUEsQ0FBQSxDQUFDLEtBQUEsRUFBSyxDQUFDLFNBQVMsQ0FBQSxDQUFHLENBQUE7SUFDMUIsQ0FBQTtBQUNWLEVBQVUsQ0FBQSxFQUFBOztFQUVSLG9CQUFBLEtBQUksRUFBQSxDQUFBLENBQUMsU0FBQSxFQUFTLENBQUMsU0FBVSxDQUFBLEVBQUE7SUFDdkIsb0JBQUEsS0FBSSxFQUFBLENBQUEsQ0FBQyxTQUFBLEVBQVMsQ0FBQyxZQUFhLENBQUEsRUFBQSxNQUFVLENBQUEsRUFBQTtJQUN0QyxvQkFBQSxLQUFJLEVBQUEsQ0FBQSxDQUFDLFNBQUEsRUFBUyxDQUFDLG1CQUFvQixDQUFBLEVBQUEsTUFBVSxDQUFBLEVBQUE7SUFDN0Msb0JBQUEsS0FBSSxFQUFBLENBQUEsQ0FBQyxTQUFBLEVBQVMsQ0FBQyxzQkFBdUIsQ0FBQSxFQUFBLFNBQWEsQ0FBQTtBQUN2RCxFQUFRLENBQUE7O0FBRUYsQ0FBQSxFQUFFLFFBQVEsQ0FBQyxjQUFjLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpfXZhciBmPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChmLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGYsZi5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJ2YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpLFxuICBtdWkgPSByZXF1aXJlKCdtYXRlcmlhbC11aScpLFxuICBUb29sYmFyID0gbXVpLlRvb2xiYXIsXG4gIERyb3BEb3duTWVudSA9IG11aS5Ecm9wRG93bk1lbnUsXG4gIERyb3BEb3duSWNvbiA9IG11aS5Ecm9wRG93bkljb24sXG4gIFRvb2xiYXJHcm91cCA9IG11aS5Ub29sYmFyR3JvdXAsXG4gIFJhaXNlZEJ1dHRvbiA9IG11aS5SYWlzZWRCdXR0b24sXG4gIEljb25CdXR0b24gPSBtdWkuSWNvbkJ1dHRvbixcbiAgRmxhdEJ1dHRvbiA9IG11aS5GbGF0QnV0dG9uLFxuICBEYXRlUGlja2VyID0gbXVpLkRhdGVQaWNrZXIsXG4gIFRleHRGaWVsZCA9IG11aS5UZXh0RmllbGQsXG4gIE1lbnVJdGVtID0gbXVpLk1lbnVJdGVtLFxuICBMZWZ0TmF2ID0gbXVpLkxlZnROYXYsXG4gIERpYWxvZyA9IG11aS5EaWFsb2csXG4gIFNuYWNrYmFyID0gbXVpLlNuYWNrYmFyLFxuICBQYXBlciA9IG11aS5QYXBlcixcbiAgQXBwQmFyID0gbXVpLkFwcEJhcixcbiAgQXBwQ2FudmFzID0gbXVpLkFwcENhbnZhcyxcbiAgSWNvbiA9IG11aS5JY29uO1xuXG52YXIgaW5qZWN0VGFwRXZlbnRQbHVnaW4gPSByZXF1aXJlKFwicmVhY3QtdGFwLWV2ZW50LXBsdWdpblwiKTtcblxuLy9OZWVkZWQgZm9yIG9uVG91Y2hUYXBcbi8vQ2FuIGdvIGF3YXkgd2hlbiByZWFjdCAxLjAgcmVsZWFzZVxuLy9DaGVjayB0aGlzIHJlcG86XG4vL2h0dHBzOi8vZ2l0aHViLmNvbS96aWx2ZXJsaW5lL3JlYWN0LXRhcC1ldmVudC1wbHVnaW5cbmluamVjdFRhcEV2ZW50UGx1Z2luKCk7XG5cblxudmFyIGZpbHRlck9wdGlvbnMgPSBbXG4gIHsgcGF5bG9hZDogJzEnLCB0ZXh0OiAnQWxsIEJyb2FkY2FzdHMnIH0sXG4gIHsgcGF5bG9hZDogJzInLCB0ZXh0OiAnQWxsIFZvaWNlJyB9LFxuICB7IHBheWxvYWQ6ICczJywgdGV4dDogJ0FsbCBUZXh0JyB9LFxuICB7IHBheWxvYWQ6ICc0JywgdGV4dDogJ0NvbXBsZXRlIFZvaWNlJyB9LFxuICB7IHBheWxvYWQ6ICc1JywgdGV4dDogJ0NvbXBsZXRlIFRleHQnIH0sXG4gIHsgcGF5bG9hZDogJzYnLCB0ZXh0OiAnQWN0aXZlIFZvaWNlJyB9LFxuICB7IHBheWxvYWQ6ICc3JywgdGV4dDogJ0FjdGl2ZSBUZXh0JyB9LFxuXTtcbnZhciBpY29uTWVudUl0ZW1zID0gW1xuICB7IHBheWxvYWQ6ICcxJywgdGV4dDogJ0Rvd25sb2FkJyB9LFxuICB7IHBheWxvYWQ6ICcyJywgdGV4dDogJ01vcmUgSW5mbycgfVxuXTtcblxuXG5SZWFjdC5yZW5kZXIoPGRpdiBjbGFzc05hbWU9XCJmcmFtZVwiPlxuXG4gIDxQYXBlciB6RGVwdGg9ezF9IGNsYXNzTmFtZT1cIm5hdmJhclwiIGlubmVyQ2xhc3NOYW1lPVwibmF2YmFyLWNvbnRhaW5lclwiPlxuICAgIDxJY29uQnV0dG9uIGljb249XCJuYXZpZ2F0aW9uLW1lbnVcIiB0b29sdGlwPVwiTmF2aWdhdGlvblwiIGNsYXNzTmFtZT1cIm5hdi1pY29uXCIgLz5cbiAgICA8aDEgY2xhc3NOYW1lPVwidGl0bGVcIj5FLVByb3RvdHlwZTI8L2gxPlxuICAgIDxkaXYgY2xhc3NOYW1lPVwicmlnaHQtbWVudVwiPlxuICAgICAgPEZsYXRCdXR0b24gbGFiZWw9XCJTZXR0aW5nc1wiIC8+XG4gICAgICA8RmxhdEJ1dHRvbiBsYWJlbD1cIkxvZyBvdXRcIiAvPlxuICAgIDwvZGl2PlxuICA8L1BhcGVyPlxuXG4gIDxkaXYgY2xhc3NOYW1lPVwiY29sdW1uc1wiPlxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZW50cnktbGlzdFwiPmxpc3Q8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzTmFtZT1cImVudHJ5LWVkaXQgYWN0aXZlXCI+ZWRpdDwvZGl2PlxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZW50cnktZGlzcGxheSBhY3RpdmVcIj5kaXNwbGF5PC9kaXY+XG4gIDwvZGl2PlxuXG48L2Rpdj4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGVzLXJlYWN0LWFwcFwiKSk7XG4iXX0=
